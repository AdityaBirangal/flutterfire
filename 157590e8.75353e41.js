(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{108:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var r=n(1),a=n(6),i=(n(0),n(142)),l={id:"overview",title:"FlutterFire Overview",sidebar_label:"Overview"},o={id:"overview",title:"FlutterFire Overview",description:"Welcome to FlutterFire! \ud83d\udd25",source:"@site/../docs/overview.mdx",permalink:"/flutterfire/docs/overview",editUrl:"https://github.com/FirebaseExtended/flutterfire/edit/next/docs/../docs/overview.mdx",sidebar_label:"Overview",sidebar:"main",next:{title:"Android Installation",permalink:"/flutterfire/docs/installation/android"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Platform Setup",id:"platform-setup",children:[]},{value:"Initializing FlutterFire",id:"initializing-flutterfire",children:[]},{value:"Next Steps",id:"next-steps",children:[]}],b=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",t)}},s=b("Tabs"),u=b("TabItem"),p={rightToc:c};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Welcome to FlutterFire! \ud83d\udd25"),Object(i.b)("p",null,"FlutterFire is a set of Flutter plugins which connect your Flutter application to ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://firebase.com"}),"Firebase"),"."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"FlutterFire is currently work in progress as we work towards a stable release. Plugins & documentation may be incomplete\nor missing functionality.")),Object(i.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(i.b)("p",null,"Before getting started, the documentation assumes you are able to create (or have an existing) Flutter project and also\nhave an active Firebase project. If you do not meet these prerequisites, follow the links below:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://flutter.dev/docs/get-started/install"}),"Getting Started with Flutter"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://console.firebase.google.com/"}),"Create a new Firebase project"),".")),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("p",null,"Before any Firebase services can be used, you must first install the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://pub.dev/packages/firebase_core"}),Object(i.b)("inlineCode",{parentName:"a"},"firebase_core")),"\nplugin, which is responsible for connecting your application to Firebase. Add the plugin to your ",Object(i.b)("inlineCode",{parentName:"p"},"pubspec.yaml")," file:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml",metastring:'{4} title="pubspec.yaml"',"{4}":!0,title:'"pubspec.yaml"'}),'dependencies:\n  flutter:\n    sdk: flutter\n  firebase_core: "{{ plugins.firebase_core }}"\n')),Object(i.b)("p",null,"Install the plugin by running the following command from the project root:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ flutter pub get\n")),Object(i.b)("h2",{id:"platform-setup"},"Platform Setup"),Object(i.b)("p",null,"Once installed, Firebase needs to be configured to work with the various platforms you're working with:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/flutterfire/docs/installation/android"}),"Android Installation"),"."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/flutterfire/docs/installation/ios"}),"iOS Installation"),"."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/flutterfire/docs/installation/web"}),"Web Installation"),".")),Object(i.b)("h2",{id:"initializing-flutterfire"},"Initializing FlutterFire"),Object(i.b)("p",null,'Before any of the Firebase services can be used, FlutterFire needs to be initialized (you can think of this process as\nFlutterFire "bootstrapping" itself). The initialization step is asynchronous, meaning you\'ll need to prevent any FlutterFire\nrelated usage until the initialization is completed.'),Object(i.b)("p",null,"To initialize FlutterFire, call the ",Object(i.b)("inlineCode",{parentName:"p"},"initializeApp")," method on the ",Object(i.b)("inlineCode",{parentName:"p"},"FirebaseCore")," instance:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-dart"}),"await FirebaseCore.instance.initializeApp();\n")),Object(i.b)("p",null,"The method is asynchronous and returns a ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://api.flutter.dev/flutter/dart-async/Future-class.html"}),Object(i.b)("inlineCode",{parentName:"a"},"Future")),", so\nyou need to ensure it has completed before displaying your main application. The examples below show how this can be\nachieved with a ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://api.flutter.dev/flutter/widgets/FutureBuilder-class.html"}),Object(i.b)("inlineCode",{parentName:"a"},"FutureBuilder"))," or\na ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://api.flutter.dev/flutter/widgets/StatefulWidget-class.html"}),Object(i.b)("inlineCode",{parentName:"a"},"StatefulWidget")),":"),Object(i.b)(s,{defaultValue:"future",values:[{label:"FutureBuilder",value:"future"},{label:"StatefulWidget",value:"state"}],mdxType:"Tabs"},Object(i.b)(u,{value:"future",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-dart",metastring:'title="lib/main.dart"',title:'"lib/main.dart"'}),"import 'package:flutter/material.dart';\n\n// Import the firebase_core plugin\nimport 'package:firebase_core/firebase_core.dart';\n\nvoid main() {\n  runApp(App());\n}\n\nclass App extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return FutureBuilder(\n      // Initialize FlutterFire\n      future: FirebaseCore.instance.initializeApp(),\n      builder: (context, snapshot) {\n        // Check for errors\n        if (snapshot.hasError) {\n          return SomethingWentWrong();\n        }\n\n        // Once complete, show your application\n        if (snapshot.connectionState == ConnectionState.done) {\n          return MyAwesomeApp();\n        }\n\n        // Otherwise, show something whilst waiting for initialization to complete\n         return Loading();\n      },\n    );\n  }\n}\n"))),Object(i.b)(u,{value:"state",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-dart",metastring:'title="lib/main.dart"',title:'"lib/main.dart"'}),"import 'package:flutter/material.dart';\n\n// Import the firebase_core plugin\nimport 'package:firebase_core/firebase_core.dart';\n\nvoid main() {\n  runApp(App());\n}\n\nclass App extends StatefulWidget {\n  _AppState createState() => _AppState();\n}\n\nclass _AppState extends State<App> {\n  // Set default `_initialized` and `_error` state to false\n  bool _initialized = false;\n  bool _error = false;\n\n  // Define an async function to initialize FlutterFire\n  void initializeFlutterFire() async {\n    try {\n      // Wait for Firebase to initialize and set `_initialized` state to true\n      await FirebaseCore.instance.initializeApp();\n      setState(() {\n        _initialized = true;\n      });\n    } catch(e) {\n      // Set `_error` state to true if Firebase initialization fails\n      setState(() {\n        _error = true;\n      });\n    }\n  }\n\n  @override\n  void initState() {\n    initializeFlutterFire();\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // Show error message if initialization failed\n    if(_error) {\n      return SomethingWentWrong();\n    }\n\n    // Show a loader until FlutterFire is initialized\n    if (!_initialized) {\n      return Loading();\n    }\n\n    return MyAwesomeApp();\n  }\n}\n")))),Object(i.b)("p",null,"Once initialized, you're ready to get started using FlutterFire!"),Object(i.b)("h2",{id:"next-steps"},"Next Steps"),Object(i.b)("p",null,"On it's own the ",Object(i.b)("inlineCode",{parentName:"p"},"firebase_core")," plugin provides basic functionality for usage with Firebase. FlutterFire is broken down\ninto a number of individual installable plugins which allow you to integrate with a specific Firebase service."),Object(i.b)("p",null,"The table below lists all of the currently supported plugins. You can follow the documentation for each plugin to\nget started:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Firebase"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Description"),Object(i.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"FlutterFire Plugin"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(i.b)("strong",{parentName:"td"},"Authentication")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Using Firebase Authentication you can authenticate users to your app using a number of methods such as passwords, phone numbers and popular federated provides like Google, Facebook and more. ",Object(i.b)("br",null),Object(i.b)("br",null)," ",Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"/flutterfire/docs/auth/overview"}),"View documentation ","\xbb")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://pub.dartlang.org/packages/firebase_auth"}),"firebase_auth"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(i.b)("strong",{parentName:"td"},"Cloud Firestore")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Cloud Firestore is a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud Platform. Cloud Firestore also offers seamless integration with other Firebase and Google Cloud Platform products, including Cloud Functions. ",Object(i.b)("br",null),Object(i.b)("br",null)," ",Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"/flutterfire/docs/firestore/overview"}),"View documentation ","\xbb")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://pub.dartlang.org/packages/cloud_firestore"}),"cloud_firestore"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(i.b)("strong",{parentName:"td"},"Core")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"The ",Object(i.b)("inlineCode",{parentName:"td"},"firebase_core")," plugin is used to initialize FlutterFire and connect your application with multiple Firebase projects. ",Object(i.b)("br",null),Object(i.b)("br",null)," ",Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"/flutterfire/docs/core/usage"}),"View documentation ","\xbb")),Object(i.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(i.b)("a",Object(r.a)({parentName:"td"},{href:"https://pub.dartlang.org/packages/firebase_core"}),"firebase_core"))))))}d.isMDXComponent=!0},142:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),s=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},u=function(e){var t=s(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(l,".").concat(d)]||u[d]||p[d]||i;return n?a.a.createElement(f,o({ref:t},b,{components:n})):a.a.createElement(f,o({ref:t},b))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var b=2;b<i;b++)l[b]=n[b];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);